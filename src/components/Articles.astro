---
import { getCollection } from 'astro:content'
import FormattedDate from './FormattedDate.astro'

const posts = (await getCollection('article'))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 3)
---

<section id="articles" class="articles">
  <div class="container">
    <h2 class="section-title">
      <span class="title-decoration">ニュース</span>
    </h2>
    <div class="articles-content">
      {
        posts.map((post) => (
          <div class="article-card">
            <a href={`/article/${post.id}/`}>
              <img width={360} height={180} src={post.data.heroImage} alt="" />
              <h4 class="article-title">{post.data.title}</h4>
              <p class="article-date">
                <FormattedDate date={post.data.pubDate} />
              </p>
              <p class="article-description">{post.data.description}</p>
            </a>
          </div>
        ))
      }
    </div>
    <div class="view-all-link">
      <a href="/article/">ニュース一覧へ</a>
    </div>
  </div>
</section>

<style lang="scss">
  @use '../styles/scss/_breakpoints.scss' as *;

  .articles {
    position: relative;
    overflow: hidden;
    background: var(--color-white);
    padding: 3rem 0;
  }

  .section-title {
    text-align: center;
    margin-bottom: 2rem;
    font-size: 1.8rem;
  }

  .articles-content {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
    max-width: 1100px;
    margin: 0 auto;
  }

  .article-card {
    background-color: var(--color-white);
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .article-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }

  .article-card a {
    display: block;
    text-decoration: none;
    color: inherit;
  }

  .article-card img {
    width: 100%;
    height: 180px;
    object-fit: cover;
  }

  .article-card .article-title {
    color: var(--color-indigo);
    margin: 1rem 1rem 0.5rem 1rem;
    font-size: 1.1rem;
    line-height: 1.4;
  }

  .article-card .article-date {
    margin: 0 1rem 0.5rem 1rem;
    color: var(--color-gray);
    font-size: 0.9rem;
  }

  .article-card .article-description {
    margin: 0 1rem 1rem 1rem;
    color: var(--color-sumi);
    font-size: 0.95rem;
    line-height: 1.5;
  }

  @media (min-width: $breakpoint-481) {
    .section-title {
      margin-bottom: 2.5rem;
      font-size: 2rem;
    }
  }

  @media (min-width: $breakpoint-769) {
    .section-title {
      margin-bottom: 3rem;
      font-size: 2.2rem;
    }
  }

  @media (max-width: $breakpoint-small) {
    .articles-content {
      grid-template-columns: 1fr;
      gap: 1rem;
    }
  }

  .view-all-link {
    text-align: center;
    margin-top: 2rem;
  }

  .view-all-link a {
    display: inline-block;
    padding: 0.75rem 1.5rem;
    background-color: var(--color-indigo);
    color: var(--color-white);
    text-decoration: none;
    border-radius: 5px;
    font-weight: 600;
    transition: background-color 0.3s ease;
  }

  .view-all-link a:hover {
    background-color: var(--color-gold);
  }
</style>
